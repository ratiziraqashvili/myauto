generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

enum GenderType {
  Male
  Female
}

model User {
  id            String     @id @default(cuid())
  name          String     @unique
  lastName      String
  email         String     @unique
  phone         String?    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  gender        GenderType
  vehicle       Vehicle[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum VehicleType {
  Car
  SpecialVehicle
  Motorcycle
}

enum RentingType {
  ForSale
  ForRent
}

enum LengthUnitType {
  KM
  MI
}

enum SteeringWheelType {
  Right
  Left
}

enum TransmissionType {
  Manual
  Automatic
  Tiptronic
  Variator
}

enum FuelType {
  Gasoline
  Diesel
  Electric
  Hybrid
  RechargeableHybrid
  LiquidGas
  NaturalGas
  Hydrogen
}

enum LeadingWheelsType {
  Front
  Back
  Four_Four
}

enum NumberOfDoors {
  Two_Three
  Four_Five
  Greater_Than_Five
}

enum InteriorMaterialType {
  Piece
  Leather
  ArtificialLeather
}

enum CurrencyType {
  GEL
  USD
}

model Vehicle {
  id                    String               @id @default(cuid())
  userId                String
  user                  User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  ownerName             String
  ownerPhone            String
  vehicle               VehicleType
  renting               RentingType
  manufacturer          String
  model                 String
  customModel           String
  category              String
  year                  String
  month                 String
  numberOfCylinders     String
  engineCapacity        String
  turbo                 Boolean
  numberOfAirbags       String
  mileage               String
  lenghtUnit            LengthUnitType
  steeringWheel         SteeringWheelType
  transmission          TransmissionType
  fuel                  FuelType
  leadingWheels         LeadingWheelsType
  doors                 NumberOfDoors
  catalyst              Boolean
  color                 String
  interiorMaterial      InteriorMaterialType
  interiorMaterialColor String
  additionalParameters  String[]
  description           String
  location              String
  customsClearance      Boolean
  techView              Boolean
  images                Image[]
  video                 String               @db.Text
  price                 String
  currency              CurrencyType
  priceWithDeal         Boolean
  carExchange           Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([model])
  @@index([category])
}

model Image {
  id        String  @id @default(cuid())
  vehicleId String
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id], onDelete: Cascade)
  url       String  @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([vehicleId])
}
